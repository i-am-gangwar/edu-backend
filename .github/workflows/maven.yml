# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Navigate to the subdirectory containing the pom.xml file
      - name: Build with Maven
        working-directory: ./edu-backend
        run: mvn clean package
        env:
            MONGODB_URI: ${{ secrets.MONGODB_URI }}
      #  run: mvn -B package --file pom.xml

      # Generate Dependency Graph manually using Maven command
      - name: Generate Dependency Graph
        working-directory: ./edu-backend
        run: mvn com.github.ferstl:depgraph-maven-plugin:graph

    # Submit dependency graph to GitHub (using the action properly with `uses`)
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        with:
          repository: https://github.com/${{ github.repository }}
          ref: ${{ github.sha }}
